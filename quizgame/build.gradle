plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springModulithVersion', "1.2.4")
	set("springCacheVersion", "3.3.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	compileOnly 'org.projectlombok:lombok'

	implementation 'org.postgresql:postgresql:42.6.0'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.flywaydb:flyway-core'
	implementation "org.flywaydb:flyway-database-postgresql"
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0")
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-config'

	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	testImplementation 'org.testcontainers:junit-jupiter'

	testImplementation 'org.springframework.boot:spring-boot-testcontainers'

	testImplementation 'org.springframework.security:spring-security-test'


	implementation("org.springframework.boot:spring-boot-starter-cache:${springCacheVersion}")


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
